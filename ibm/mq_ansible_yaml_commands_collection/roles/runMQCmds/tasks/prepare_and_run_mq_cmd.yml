---
# (c) Copyright IBM Corporation 2023
# Apache License, Version 2.0 (see https://opensource.org/licenses/Apache-2.0)

# File: roles/runMQCmds/tasks/prepare_and_run_mq_cmd.yml

# Include tasks list for role runMQCmds to prepare and run the MQ command

# Print target queue manager for command when playbook is run with the -vv debug option.
- name: Print full command output
  ansible.builtin.debug:
    msg: "Target queue manager for command: {{ qmgr_name }}"
    verbosity: 2

# Print command to be actioned when playbook is run with the -vv debug option.
- name: YAML form MQ command to be run
  ansible.builtin.debug:
    msg: "{{ mq_cmd }}"
    verbosity: 2

# Prepare MQ commands in JSON form and run them via the MQ administrative POST REST API. 
# runCommandJSON specifies that a JSON format MQSC command is to be executed.
- name: add request type to mq command (if missing)
  vars:
    mq_cmd_type_value: '{{ mq_cmd.type | default("runCommandJSON", true) | trim }}'
  ansible.builtin.set_fact:
    mq_command: '{{ mq_cmd | combine({"type" : mq_cmd_type_value}) }}'

# Convert command body into JSON format and run the command.
- name: Convert MQ command to JSON format and issue MQ Admin REST API using basic authentication (against a running mqweb server)
  ansible.builtin.uri:
    url: "https://{{ webserver_addr }}:{{ webserver_port }}/ibmmq/rest/v3/admin/action/qmgr/{{ qmgr_name }}/mqsc"
    url_username: "{{ api_userid }}"
    url_password: "{{ api_password }}"
    method: POST
    body: "{{ mq_command | to_json }}"
    force_basic_auth: true
    validate_certs: false
    status_code: 200
    body_format: json
    headers:
      ibm-mq-rest-csrf-token: ""
      Content-Type: application/json
    return_content: yes
  register: rest_command_output

# Print full command output when playbook is run with the -vvv debug option.
- name: Print full command output
  ansible.builtin.debug:
    msg: "{{ rest_command_output }}"
    verbosity: 3

# Print command response and overall completion and reason codes when playbook is run with the -vvv debug option.
- name: Print command response and overall completion and reason codes
  ansible.builtin.debug:
    msg: "{{ rest_command_output.content }}"
    verbosity: 3


- name: Format command output
  ansible.builtin.set_fact:
    mq_output: "{{ rest_command_output.json.commandResponse | join(',') }}"

# In some responses, the REST API implementation on IBM MQ on distributed platforms displays more information
# than the REST API implementation on IBM MQ for z/OS. Refer to the section on 'POST - JSON formatted command' 
# in the IBM MQ Docs for specific information about this.
#
# Print command output when playbook is run with the -vv debug option.
- name: Print command output
  ansible.builtin.debug:
    msg: "{{ mq_output }}"
    verbosity: 2

- name: Set overall completion code and end command processing if required
  ansible.builtin.set_fact:
    overallCompCode: "{{ rest_command_output.json.overallCompletionCode | int }}"
  failed_when: ((stop_on_error | bool) == true) and 
               ((overallCompCode | int) != 0)

# Print the overall completion code when playbook is run with the -vv debug option.
- name: Print overall completion code
  ansible.builtin.debug:
    msg: "{{ overallCompCode | int  }}"
    verbosity: 2
...